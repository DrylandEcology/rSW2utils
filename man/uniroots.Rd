% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rootfinding_optimization.R
\name{uniroots}
\alias{uniroots}
\title{Locate zeros (roots) of a function}
\usage{
uniroots(f, xlim, tol = .Machine[["double.eps"]]^0.25, expected_nroots = 1)
}
\arguments{
\item{f}{Function.}

\item{xlim}{A numeric vector of length 2. The search interval.}

\item{tol}{A numeric value. The convergence tolerance.}

\item{expected_nroots}{Maximum number of roots,
i.e., the interval \code{xlim} is split into this number of
contiguous sections and each is checked for the presence of a root}
}
\value{
A list where each element is an object
  returned from \code{\link[stats]{uniroot}} or of
  class \code{"try-error"} (see \code{\link[base]{try}}), or \code{NULL}.
}
\description{
Find the x-axis values where \code{f(x) = 0}. This can also be used to
find the intersections between two functions, i.e., \code{f1(x) - f2(x) = 0},
see examples.
}
\examples{
# Locate roots of a function
f <- function(x) -1 + x^2
xt <- seq(-1.5, 1.5, by = 0.1)
plot(xt, f(xt), type = "l")
abline(h = 0, col = "gray")

r <- uniroots(
  f = f,
  xlim = c(-10, 10),
  expected_nroots = 2
)

for (i in seq_along(r)) {
  abline(v = r[[i]][["root"]], col = "red")
}

# Locate intersections between two functions
a2 <- 4
f1 <- function(x) sin(2 * x)
f2 <- function(x, a) cos(1 - a * x)

xt <- seq(-1, 1, by = 0.1)
plot(xt, f1(xt), type = "l")
lines(xt, f2(xt, a2), col = "gray")

r <- uniroots(
  f = function(x, a = a2) f1(x) - f2(x, a = a),
  xlim = c(-1, 1),
  expected_nroots = 3
)

for (i in seq_along(r)) {
  abline(v = r[[i]][["root"]], col = "red")
}

}
\seealso{
\code{\link[stats]{uniroot}} and
  \code{\link[rootSolve]{uniroot.all}}.
}
